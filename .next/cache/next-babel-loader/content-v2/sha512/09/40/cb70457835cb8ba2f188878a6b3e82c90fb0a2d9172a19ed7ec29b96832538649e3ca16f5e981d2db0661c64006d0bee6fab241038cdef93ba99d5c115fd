{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { ChallengesContext } from \"../contexts/ChallengesContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\nlet countdownTimeout;\nexport function Countdown() {\n  const {\n    functions\n  } = useContext(ChallengesContext);\n  const {\n    startNewChallenge\n  } = functions;\n  const {\n    0: timer,\n    1: setTimer\n  } = useState(0.1 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: hasFinished,\n    1: setHasFinished\n  } = useState(false);\n  const minute = Math.floor(timer / 60);\n  const second = timer % 60;\n  const [minuteLeft, minuteRight] = String(minute).padStart(2, \"0\").split(\"\");\n  const [secondLeft, secondRight] = String(second).padStart(2, \"0\").split(\"\");\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTimer(0.1 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && timer > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTimer(timer - 1);\n      }, 1000);\n    } else if (isActive && timer === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, timer]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: minuteLeft\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: minuteRight\n        })]\n      }), /*#__PURE__*/_jsx(\"span\", {\n        children: \":\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: secondLeft\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: secondRight\n        })]\n      })]\n    }), hasFinished ? /*#__PURE__*/_jsx(\"button\", {\n      disabled: true,\n      type: \"button\",\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }) : /*#__PURE__*/_jsx(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsx(\"button\", {\n        onClick: resetCountdown,\n        type: \"button\",\n        className: `${styles.countdownButton} + ${styles.stopCountdownButton}`,\n        children: \"Abandonar ciclo\"\n      }) : /*#__PURE__*/_jsx(\"button\", {\n        onClick: startCountdown,\n        type: \"button\",\n        className: styles.countdownButton,\n        children: \"Iniciar ciclo\"\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}