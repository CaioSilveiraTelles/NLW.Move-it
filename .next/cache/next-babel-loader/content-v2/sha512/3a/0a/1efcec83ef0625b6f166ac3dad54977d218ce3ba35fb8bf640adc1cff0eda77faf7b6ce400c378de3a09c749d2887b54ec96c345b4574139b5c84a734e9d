{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/Users/caio.telles/move-it/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { ChallengesContext } from \"../contexts/ChallengesContext\";\nimport styles from \"../styles/components/Countdown.module.css\";\nvar countdownTimeout;\nexport function Countdown() {\n  var _useContext = useContext(ChallengesContext),\n      functions = _useContext.functions;\n\n  var startNewChallenge = functions.startNewChallenge;\n\n  var _useState = useState(0.1 * 60),\n      timer = _useState[0],\n      setTimer = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minute = Math.floor(timer / 60);\n  var second = timer % 60;\n\n  var _String$padStart$spli = String(minute).padStart(2, \"0\").split(\"\"),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(second).padStart(2, \"0\").split(\"\"),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTimer(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && timer > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTimer(timer - 1);\n      }, 1000);\n    } else if (isActive && timer === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, timer]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: minuteLeft\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: minuteRight\n        })]\n      }), /*#__PURE__*/_jsx(\"span\", {\n        children: \":\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: secondLeft\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: secondRight\n        })]\n      })]\n    }), hasFinished ? /*#__PURE__*/_jsx(\"button\", {\n      disabled: true,\n      type: \"button\",\n      className: styles.countdownButton,\n      children: \"Ciclo encerrado\"\n    }) : /*#__PURE__*/_jsx(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsx(\"button\", {\n        onClick: resetCountdown,\n        type: \"button\",\n        className: \"\".concat(styles.countdownButton, \" + \").concat(styles.stopCountdownButton),\n        children: \"Abandonar ciclo\"\n      }) : /*#__PURE__*/_jsx(\"button\", {\n        onClick: startCountdown,\n        type: \"button\",\n        className: styles.countdownButton,\n        children: \"Iniciar ciclo\"\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}